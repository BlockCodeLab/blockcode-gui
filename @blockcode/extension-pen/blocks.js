import{Text as i}from"@blockcode/ui";var s={en:{"extension.pen.name":"Pen","extension.pen.erase":"erase all","extension.pen.stamp":"stamp","extension.pen.down":"pen down","extension.pen.up":"pen up","extension.pen.penColor":"set pen color to [COLOR]","extension.pen.color":"color","extension.pen.saturation":"saturation","extension.pen.brightness":"brightness","extension.pen.changePen":"change pen [OPTION] by [VALUE]","extension.pen.setPen":"set pen [OPTION] to [VALUE]","extension.pen.changeSize":"change pen size by [SIZE]","extension.pen.setSize":"set pen size to [SIZE]"},"zh-Hans":{"extension.pen.name":"画笔","extension.pen.erase":"全部擦除","extension.pen.stamp":"图章","extension.pen.down":"落笔","extension.pen.up":"抬笔","extension.pen.penColor":"将笔的颜色设为 [COLOR]","extension.pen.color":"颜色","extension.pen.saturation":"饱和度","extension.pen.brightness":"亮度","extension.pen.changePen":"将笔的 [OPTION] 增加 [VALUE]","extension.pen.setPen":"将笔的 [OPTION] 设为 [VALUE]","extension.pen.changeSize":"将笔的粗细增加 [SIZE]","extension.pen.setSize":"将笔的粗细设为 [SIZE]"}};var a="./assets/icon-wkgstzvn.svg";var d="./assets/pen-r64ajsxd.py";import{jsx as o}from"preact/jsx-runtime";var f={iconURI:a,name:o(i,{id:"extension.pen.name",defaultMessage:"Pen"}),files:[{name:"pen",type:"text/x-python",uri:d}],blocks:[{id:"erase",text:o(i,{id:"extension.pen.erase",defaultMessage:"erase all"}),python(t){this.definitions_.import_extension_pen="from extensions.pen import pen";let e="";if(this.STATEMENT_PREFIX)e+=this.injectId(this.STATEMENT_PREFIX,t);return e+=`pen.clear()
`,e},vm(t){let e="";if(this.STATEMENT_PREFIX)e+=this.injectId(this.STATEMENT_PREFIX,t);return e+="stage.layer.children['pen_renderer']?",e+=`.children.forEach((group) => group.removeChildren());
`,e}},{id:"stamp",text:o(i,{id:"extension.pen.stamp",defaultMessage:"stamp"}),useStage:!1,python(t){this.definitions_.import_extension_pen="from extensions.pen import pen";let e="";if(this.STATEMENT_PREFIX)e+=this.injectId(this.STATEMENT_PREFIX,t);return e+=`pen.stamp(target)
`,e},vm(t){let e="";if(this.STATEMENT_PREFIX)e+=this.injectId(this.STATEMENT_PREFIX,t);let n=p.call(this);return e+=`${n}(target.clone());
`,e}},{id:"down",text:o(i,{id:"extension.pen.down",defaultMessage:"pen down"}),useStage:!1,python(t){this.definitions_.import_extension_pen="from extensions.pen import pen";let e="";if(this.STATEMENT_PREFIX)e+=this.injectId(this.STATEMENT_PREFIX,t);return e+=`pen.down(target)
`,e},vm(t){let e="";if(this.STATEMENT_PREFIX)e+=this.injectId(this.STATEMENT_PREFIX,t);let n=p.call(this),r=h.call(this);return e+=`${n}(${r}(target));
`,e}},{id:"up",text:o(i,{id:"extension.pen.up",defaultMessage:"pen up"}),useStage:!1,python(t){this.definitions_.import_extension_pen="from extensions.pen import pen";let e="";if(this.STATEMENT_PREFIX)e+=this.injectId(this.STATEMENT_PREFIX,t);return e+=`pen.up(target)
`,e},vm(t){let e="";if(this.STATEMENT_PREFIX)e+=this.injectId(this.STATEMENT_PREFIX,t);return e+=`if (target.data.pen_update) {
`,e+=`  target.util.off('update', target.data.pen_update);
`,e+=`  target.data.pen_update = null;
`,e+=`}
`,e}},{id:"penColor",text:o(i,{id:"extension.pen.penColor",defaultMessage:"set pen color to [COLOR]"}),useStage:!1,inputs:{COLOR:{type:"color"}},python(t){this.definitions_.import_extension_pen="from extensions.pen import pen";let e="";if(this.STATEMENT_PREFIX)e+=this.injectId(this.STATEMENT_PREFIX,t);let n=this.valueToCode(t,"COLOR",this.ORDER_NONE)||"(0, 0, 0)";return e+=`pen.set_color(target, ${n})
`,e},vm(t){let e="";if(this.STATEMENT_PREFIX)e+=this.injectId(this.STATEMENT_PREFIX,t);let n=this.valueToCode(t,"COLOR",this.ORDER_NONE)||'"#000000"';return e+=`target.data.pen_color = ${n};
`,e}},{id:"changePen",text:o(i,{id:"extension.pen.changePen",defaultMessage:"change pen [OPTION] by [VALUE]"}),useStage:!1,inputs:{OPTION:{menu:"colorParam"},VALUE:{type:"number",default:10}},python(t){this.definitions_.import_extension_pen="from extensions.pen import pen";let e="";if(this.STATEMENT_PREFIX)e+=this.injectId(this.STATEMENT_PREFIX,t);let n=this.valueToCode(t,"OPTION",this.ORDER_NONE)||"hue",r=this.valueToCode(t,"VALUE",this.ORDER_NONE)||0;return e+=`pen.change_color(target, ${n} = num(${r}))
`,e},vm(t){let e="";if(this.STATEMENT_PREFIX)e+=this.injectId(this.STATEMENT_PREFIX,t);let n=this.valueToCode(t,"OPTION",this.ORDER_NONE)||"hue",r=this.valueToCode(t,"VALUE",this.ORDER_NONE)||0;if(e+=`target.data.pen_color = new runtime.core.Color(target.data.pen_color).convert('hsb');
`,n==="hue")e+=`target.data.pen_color.${n} = (target.data.pen_color.${n} + runtime.number(${r}) * 3.6) % 360;
`;else e+=`target.data.pen_color.${n} = runtime.clamp(target.data.pen_color.${n} + runtime.number(${r}) / 100, 0, 1);
`;return e+=`target.data.pen_color = target.data.pen_color.toCSS(true);
`,e}},{id:"setPen",text:o(i,{id:"extension.pen.setPen",defaultMessage:"set pen [OPTION] to [VALUE]"}),useStage:!1,inputs:{OPTION:{menu:"colorParam"},VALUE:{type:"number",default:50}},python(t){this.definitions_.import_extension_pen="from extensions.pen import pen";let e="";if(this.STATEMENT_PREFIX)e+=this.injectId(this.STATEMENT_PREFIX,t);let n=this.valueToCode(t,"OPTION",this.ORDER_NONE)||"hue",r=this.valueToCode(t,"VALUE",this.ORDER_NONE)||0;return e+=`pen.set_color(${n} = num(${r}))
`,e},vm(t){let e="";if(this.STATEMENT_PREFIX)e+=this.injectId(this.STATEMENT_PREFIX,t);let n=this.valueToCode(t,"OPTION",this.ORDER_NONE)||"hue",r=this.valueToCode(t,"VALUE",this.ORDER_NONE)||0;if(e+=`target.data.pen_color = new runtime.core.Color(target.data.pen_color);
`,n==="hue")e+=`target.data.pen_color.${n} = runtime.number(${r}) * 3.6 % 360;
`;else e+=`target.data.pen_color.${n} = runtime.clamp(runtime.number(${r}) / 100, 0, 1);
`;return e+=`target.data.pen_color = target.data.pen_color.toCSS(true);
`,e}},{id:"changeSize",text:o(i,{id:"extension.pen.changeSize",defaultMessage:"change pen size by [SIZE]"}),useStage:!1,inputs:{SIZE:{type:"number",default:1}},python(t){this.definitions_.import_extension_pen="from extensions.pen import pen";let e="";if(this.STATEMENT_PREFIX)e+=this.injectId(this.STATEMENT_PREFIX,t);let n=this.valueToCode(t,"SIZE",this.ORDER_NONE)||1;return e+=`pen.change_size(target, num(${n}))
`,e},vm(t){let e="";if(this.STATEMENT_PREFIX)e+=this.injectId(this.STATEMENT_PREFIX,t);let n=this.valueToCode(t,"SIZE",this.ORDER_NONE)||1;return e+=`target.data.pen_size = runtime.number(target.data.pen_size, 1) + runtime.number(${n}, 1);
`,e}},{id:"setSize",text:o(i,{id:"extension.pen.setSize",defaultMessage:"set pen size to [SIZE]"}),useStage:!1,inputs:{SIZE:{type:"number",default:1}},python(t){this.definitions_.import_extension_pen="from extensions.pen import pen";let e="";if(this.STATEMENT_PREFIX)e+=this.injectId(this.STATEMENT_PREFIX,t);let n=this.valueToCode(t,"SIZE",this.ORDER_NONE)||1;return e+=`pen.set_size(target, num(${n}))
`,e},vm(t){let e="";if(this.STATEMENT_PREFIX)e+=this.injectId(this.STATEMENT_PREFIX,t);let n=this.valueToCode(t,"SIZE",this.ORDER_NONE)||1;return e+=`target.data.pen_size = runtime.number(${n}, 1);
`,e}}],menus:{colorParam:{inputMode:!0,type:"string",default:"hue",items:[[o(i,{id:"extension.pen.color",defaultMessage:"color"}),"hue"],[o(i,{id:"extension.pen.saturation",defaultMessage:"saturation"}),"saturation"],[o(i,{id:"extension.pen.brightness",defaultMessage:"brightness"}),"brightness"]]}},translations:s};function p(){return this.provideFunction_("pen_renderer",[`const ${this.FUNCTION_NAME_PLACEHOLDER_} = (item) => {`,"  let renderer = stage.layer.children['pen_renderer'];","  if (!renderer) {","    renderer = new runtime.core.Group();","    renderer.name = 'pen_renderer';","    stage.layer.addChild(renderer)","  }","  if (!item) return;","  item.visible = true;","  renderer.addChild(item);","};"])}function h(){return this.provideFunction_("pen_draw",[`const ${this.FUNCTION_NAME_PLACEHOLDER_} = (target) => {`,"  if (target.data.pen_update) return;","  const item = new runtime.core.Group();","  item.data = {","    x: target.position.x,","    y: target.position.y,","  };","  target.data.pen_update = () => {","    const { x, y } = target.position;","    if (item.data.x !== x || item.data.y !== y) {","      item.addChild(new runtime.core.Path.Line({","        from: [item.data.x, item.data.y],","        to: [x, y],","        strokeColor: target.data.pen_color || '#000000',","        strokeWidth: target.data.pen_size || 1,","        strokeCap: 'round',","        strokeJoin: 'round',","      }));","      item.data = { x, y };","    }","  };","  target.util.on('update', target.data.pen_update)","  runtime.once('stop', () => {","    if (target.data.pen_update) {","      target.util.off('update', target.data.pen_update);","      target.data.pen_update = null;","    }","  });","  return item;","};"])}export{f as default};
