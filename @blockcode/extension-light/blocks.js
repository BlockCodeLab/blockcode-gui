import{Text as i}from"@blockcode/ui";var s={en:{"extension.light.name":"Light","extension.light.led":"set PIN [PIN] LED [STATE]","extension.light.led.off":"off","extension.light.led.on":"on","extension.light.ledToggle":"toggle PIN [PIN] LED","extension.light.ledIsOn":"PIN [PIN] LED is on?","extension.light.brightness":"PIN [PIN] ambient light brightness"},"zh-Hans":{"extension.light.name":"\u5149","extension.light.led":"\u5C06\u5F15\u811A [PIN] LED \u706F [STATE]","extension.light.led.off":"\u5173\u95ED","extension.light.led.on":"\u5F00\u542F","extension.light.ledToggle":"\u5207\u6362\u5F15\u811A [PIN] LED \u706F\u72B6\u6001","extension.light.ledIsOn":"\u5F15\u811A [PIN] LED \u706F\u5F00\u542F\uFF1F","extension.light.brightness":"\u5F15\u811A [PIN] \u73AF\u5883\u5149\u4EAE\u5EA6"}};var l="./assets/icon-5ej94635.png";var d="./assets/light-h0axnv02.py";import{jsx as n}from"preact/jsx-runtime";var p={iconURI:l,name:n(i,{id:"extension.light.name",defaultMessage:"Light"}),files:[{name:"light",type:"text/x-python",uri:d}],blocks:[{id:"setLED",text:n(i,{id:"extension.light.led",defaultMessage:"set PIN [PIN] LED [STATE]"}),inputs:{PIN:{type:"number",default:7},STATE:{inputMode:!0,type:"string",default:"on",menu:[[n(i,{id:"extension.light.led.on",defaultMessage:"on"}),"on"],[n(i,{id:"extension.light.led.off",defaultMessage:"off"}),"off"]]}},python(t){this.definitions_.import_extension_light="from extensions.light import light";let e="";if(this.STATEMENT_PREFIX)e+=this.injectId(this.STATEMENT_PREFIX,t);const o=this.valueToCode(t,"PIN",this.ORDER_NONE)||"7",h=this.valueToCode(t,"STATE",this.ORDER_NONE)||'"on"';return e+=`light.set_led(num(${o}), str(${h}))\n`,e}},{id:"toggleLED",text:n(i,{id:"extension.light.ledToggle",defaultMessage:"toggle PIN [PIN] LED"}),inputs:{PIN:{type:"number",default:7}},python(t){this.definitions_.import_extension_light="from extensions.light import light";let e="";if(this.STATEMENT_PREFIX)e+=this.injectId(this.STATEMENT_PREFIX,t);const o=this.valueToCode(t,"PIN",this.ORDER_NONE)||"7";return e+=`light.toggle_led(num(${o}))\n`,e}},{id:"isLEDOn",text:n(i,{id:"extension.light.ledIsOn",defaultMessage:"PIN [PIN] LED is on?"}),inputs:{PIN:{type:"number",default:7}},output:"boolean",python(t){return this.definitions_.import_extension_light="from extensions.light import light",[`light.is_led_on(num(${this.valueToCode(t,"PIN",this.ORDER_NONE)||"7"}))`,this.ORDER_FUNCTION_CALL]}},"---",{id:"getBrightness",text:n(i,{id:"extension.light.brightness",defaultMessage:"PIN [PIN] ambient light brightness"}),inputs:{PIN:{type:"number",default:2}},output:"number",python(t){return this.definitions_.import_extension_light="from extensions.light import light",[`light.get_brightness(num(${this.valueToCode(t,"PIN",this.ORDER_NONE)||"2"}))`,this.ORDER_FUNCTION_CALL]}}],translations:s};export{p as default};
