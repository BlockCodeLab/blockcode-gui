import{Text as i}from"@blockcode/ui";var s={en:{"extension.light.name":"Light","extension.light.led":"set PIN [PIN] LED [STATE]","extension.light.led.off":"off","extension.light.led.on":"on","extension.light.ledToggle":"toggle PIN [PIN] LED state","extension.light.ledIsOn":"PIN [PIN] LED is on?","extension.light.brightness":"PIN [PIN] ambient light brightness"},"zh-Hans":{"extension.light.name":"光","extension.light.led":"将引脚 [PIN] LED 灯 [STATE]","extension.light.led.off":"关闭","extension.light.led.on":"开启","extension.light.ledToggle":"切换引脚 [PIN] LED 灯状态","extension.light.ledIsOn":"引脚 [PIN] LED 灯开启？","extension.light.brightness":"引脚 [PIN] 环境光亮度"}};var l="./assets/icon-5ej94635.png";var d="./assets/light-bhcqrjh7.py";import{jsx as n}from"preact/jsx-runtime";var E={iconURI:l,name:n(i,{id:"extension.light.name",defaultMessage:"Light"}),files:[{name:"light",type:"text/x-python",uri:d}],blocks:[{id:"setLED",text:n(i,{id:"extension.light.led",defaultMessage:"set PIN [PIN] LED [STATE]"}),inputs:{PIN:{type:"number",default:1},STATE:{inputMode:!0,type:"string",default:"1",menu:[[n(i,{id:"extension.light.led.on",defaultMessage:"on"}),"1"],[n(i,{id:"extension.light.led.off",defaultMessage:"off"}),"0"]]}},python(t){this.definitions_.import_extension_light="from extensions.light import light";let e="";if(this.STATEMENT_PREFIX)e+=this.injectId(this.STATEMENT_PREFIX,t);let o=this.valueToCode(t,"PIN",this.ORDER_NONE)||"7",g=this.valueToCode(t,"STATE",this.ORDER_NONE)||"1";return e+=`light.set_led(num(${o}), num(${g}))
`,e}},{id:"toggleLED",text:n(i,{id:"extension.light.ledToggle",defaultMessage:"toggle PIN [PIN] LED"}),inputs:{PIN:{type:"number",default:1}},python(t){this.definitions_.import_extension_light="from extensions.light import light";let e="";if(this.STATEMENT_PREFIX)e+=this.injectId(this.STATEMENT_PREFIX,t);let o=this.valueToCode(t,"PIN",this.ORDER_NONE)||"7";return e+=`light.toggle_led(num(${o}))
`,e}},{id:"isLEDOn",text:n(i,{id:"extension.light.ledIsOn",defaultMessage:"PIN [PIN] LED is on?"}),inputs:{PIN:{type:"number",default:1}},output:"boolean",python(t){return this.definitions_.import_extension_light="from extensions.light import light",[`light.is_led_on(num(${this.valueToCode(t,"PIN",this.ORDER_NONE)||"7"}))`,this.ORDER_FUNCTION_CALL]}},"---",{id:"getBrightness",text:n(i,{id:"extension.light.brightness",defaultMessage:"PIN [PIN] ambient light brightness"}),inputs:{PIN:{type:"number",default:1}},output:"number",python(t){return this.definitions_.import_extension_light="from extensions.light import light",[`light.get_brightness(num(${this.valueToCode(t,"PIN",this.ORDER_NONE)||"2"}))`,this.ORDER_FUNCTION_CALL]}}],translations:s};export{E as default};
