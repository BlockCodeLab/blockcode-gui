import{Text as I} from"@blockcode/ui";var H={en:{"extension.servo.name":"Servo","extension.servo.90servo":"set PIN [PIN] 90\xB0 servo angle to [ANGLE]\xB0","extension.servo.180servo":"set PIN [PIN] 180\xB0 servo angle to [ANGLE]\xB0","extension.servo.motor":"set PIN [PIN] 360\xB0 servo rotate [ROTATE]","extension.servo.motorClockwise":"clockwise","extension.servo.motorAnticlockwise":"anticlockwise"},"zh-Hans":{"extension.servo.name":"\u8235\u673A","extension.servo.90servo":"\u5C06\u5F15\u811A [PIN] 90\xB0 \u8235\u673A\u89D2\u5EA6\u8BBE\u4E3A [ANGLE]\xB0","extension.servo.180servo":"\u5C06\u5F15\u811A [PIN] 180\xB0 \u8235\u673A\u89D2\u5EA6\u8BBE\u4E3A [ANGLE]\xB0","extension.servo.motor":"\u5C06\u5F15\u811A [PIN] 360\xB0 \u8235\u673A\u8F6C\u5411\u8BBE\u4E3A [ROTATE]","extension.servo.motorClockwise":"\u987A\u65F6\u9488","extension.servo.motorAnticlockwise":"\u9006\u65F6\u9488"}};var M="./assets/icon-e5314cc7d4e0ea3a.png";var E=function(){return this.definitions_.from_machine_import_pin="from machine import Pin",this.definitions_.from_machine_import_pwm="from machine import PWM",this.definitions_.servo_pwm="__servo_pwm = None",this.provideFunction_("set_servo",[[`def ${this.FUNCTION_NAME_PLACEHOLDER_}(pin, ms=0, angle=None, max_angle=180):`],"  global __servo_pwm","  if not __servo_pwm:","    __servo_pwm = PWM(Pin(pin), freq=50, duty_u16=0)","  if angle != None:","    ms = 1.5 - angle / max_angle","  __servo_pwm.duty_u16(int(ms / 20 * 65535))"])};import{jsx as R} from"preact/jsx-runtime";var h={name:R(I,{id:"extension.servo.name",defaultMessage:"Servo"}),iconURI:M,blocks:[{id:"set_90servo",text:R(I,{id:"extension.servo.90servo",defaultMessage:"set PIN [PIN] 90\xB0 servo angle to [ANGLE]\xB0"}),inputs:{PIN:{type:"number",default:0},ANGLE:{type:"angle",default:0}},python(s){let L="";if(this.STATEMENT_PREFIX)L+=this.injectId(this.STATEMENT_PREFIX,s);const q=E.call(this),w=this.valueToCode(s,"PIN",this.ORDER_NONE)||"0",B=this.valueToCode(s,"ANGLE",this.ORDER_NONE)||"0";return L+=`${q}(${w}, angle=${B}, max_angle=90)\n`,L}},{id:"set_180servo",text:R(I,{id:"extension.servo.180servo",defaultMessage:"set PIN [PIN] 180\xB0 servo angle to [ANGLE]\xB0"}),inputs:{PIN:{type:"number",default:0},ANGLE:{type:"angle",default:0}},python(s){let L="";if(this.STATEMENT_PREFIX)L+=this.injectId(this.STATEMENT_PREFIX,s);const q=E.call(this),w=this.valueToCode(s,"PIN",this.ORDER_NONE)||"0",B=this.valueToCode(s,"ANGLE",this.ORDER_NONE)||"0";return L+=`${q}(${w}, angle=${B}, max_angle=180)\n`,L}},"---",{id:"set_motor",text:R(I,{id:"extension.servo.motor",defaultMessage:"set PIN [PIN] 360\xB0 servo rotate [ROTATE]"}),inputs:{PIN:{type:"number",default:0},ROTATE:{type:"number",default:"2",menu:[[R(I,{id:"extension.servo.motorClockwise",defaultMessage:"clockwise"}),"2"],[R(I,{id:"extension.servo.motorAnticlockwise",defaultMessage:"anticlockwise"}),"1"]]}},python(s){let L="";if(this.STATEMENT_PREFIX)L+=this.injectId(this.STATEMENT_PREFIX,s);const q=E.call(this),w=this.valueToCode(s,"PIN",this.ORDER_NONE)||"0",B=s.getFieldValue("ROTATE")||"2";return L+=`${q}(${w}, ${B})\n`,L}}],translations:H};export{h as default};
